@model VendorAttributeModel

@{
    const string hideInfoBlockAttributeName = "VendorAttributePage.HideInfoBlock";
    var customer = await workContext.GetCurrentCustomerAsync();
    var hideInfoBlock = await genericAttributeService.GetAttributeAsync<bool>(customer, hideInfoBlockAttributeName);

    const string hideValuesBlockAttributeName = "VendorAttributePage.HideValuesBlock";
    var hideValuesBlock = await genericAttributeService.GetAttributeAsync<bool>(customer, hideValuesBlockAttributeName, defaultValue: true);
}

<div asp-validation-summary="All"></div>
<input asp-for="Id" type="hidden" />

<section class="content">
    <div class="container-fluid">
        <div class="form-horizontal">
            <nop-cards id="vendorattribute-cards">
                <nop-card asp-name="vendorattribute-info" asp-icon="fas fa-info" asp-title="@T("Admin.Vendors.VendorAttributes.Info")" asp-hide-block-attribute-name="@hideInfoBlockAttributeName" asp-hide="@hideInfoBlock" asp-advanced="false">@await Html.PartialAsync("_CreateOrUpdate.Info", Model)</nop-card>
                <nop-card asp-name="vendorattribute-values" asp-icon="fas fa-square-check" asp-title="@T("Admin.Vendors.VendorAttributes.Values")" asp-hide-block-attribute-name="@hideValuesBlockAttributeName" asp-hide="@hideValuesBlock" asp-advanced="false">@await Html.PartialAsync("_CreateOrUpdate.Values", Model)</nop-card>

                @await Component.InvokeAsync(typeof(AdminWidgetViewComponent), new { widgetZone = AdminWidgetZones.AdminVendorAttributeDetailsBlock, additionalData = Model })
            </nop-cards>
        </div>
    </div>
</section>