{"version":3,"file":"chart.umd.min.js","sources":["../src/helpers/helpers.core.ts","../src/helpers/helpers.math.ts","../src/helpers/helpers.collection.ts","../src/helpers/helpers.extras.ts","../src/core/core.animator.js","../node_modules/.pnpm/@kurkle+color@0.3.2/node_modules/@kurkle/color/dist/color.esm.js","../src/helpers/helpers.color.ts","../src/core/core.animations.defaults.js","../src/helpers/helpers.intl.ts","../src/core/core.ticks.js","../src/core/core.defaults.js","../src/core/core.layouts.defaults.js","../src/core/core.scale.defaults.js","../src/helpers/helpers.dom.ts","../src/helpers/helpers.canvas.ts","../src/helpers/helpers.config.ts","../src/helpers/helpers.curve.ts","../src/helpers/helpers.easing.ts","../src/helpers/helpers.interpolation.ts","../src/helpers/helpers.options.ts","../src/helpers/helpers.rtl.ts","../src/helpers/helpers.segment.js","../src/helpers/helpers.dataset.ts","../src/core/core.interaction.js","../src/core/core.layouts.js","../src/platform/platform.base.js","../src/platform/platform.basic.js","../src/platform/platform.dom.js","../src/platform/index.js","../src/core/core.animation.js","../src/core/core.animations.js","../src/core/core.datasetController.js","../src/core/core.element.ts","../src/core/core.scale.autoskip.js","../src/core/core.scale.js","../src/core/core.typedRegistry.js","../src/core/core.registry.js","../src/core/core.plugins.js","../src/core/core.config.js","../src/core/core.controller.js","../src/core/core.adapters.ts","../src/controllers/controller.bar.js","../src/controllers/controller.doughnut.js","../src/controllers/controller.polarArea.js","../src/controllers/controller.bubble.js","../src/controllers/controller.line.js","../src/controllers/controller.pie.js","../src/controllers/controller.radar.js","../src/controllers/controller.scatter.js","../src/elements/element.arc.ts","../src/elements/element.line.js","../src/elements/element.point.ts","../src/elements/element.bar.js","../src/scales/scale.category.js","../src/scales/scale.linearbase.js","../src/scales/scale.linear.js","../src/scales/scale.logarithmic.js","../src/scales/scale.radialLinear.js","../src/scales/scale.time.js","../src/scales/scale.timeseries.js","../src/plugins/plugin.colors.ts","../src/plugins/plugin.decimation.js","../src/plugins/plugin.filler/filler.segment.js","../src/plugins/plugin.filler/filler.helper.js","../src/plugins/plugin.filler/filler.options.js","../src/plugins/plugin.filler/filler.target.stack.js","../src/plugins/plugin.filler/simpleArc.js","../src/plugins/plugin.filler/filler.target.js","../src/plugins/plugin.filler/filler.drawing.js","../src/plugins/plugin.filler/index.js","../src/plugins/plugin.legend.js","../src/plugins/plugin.title.js","../src/plugins/plugin.subtitle.js","../src/plugins/plugin.tooltip.js","../src/index.umd.ts"],"sourcesContent":["/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || value === undefined;\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */\nfunction isNonPrimitive(n: unknown) {\n  return typeof n === 'symbol' || (typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n));\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNonPrimitive(n) && !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\nimport {isNullOrUndef} from './helpers.core.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, vScale, _parsed} = meta;\n    const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n      if (spanGaps) {\n        const distanceToDefinedLo = (_parsed\n          .slice(0, start + 1)\n          .reverse()\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        start -= Math.max(0, distanceToDefinedLo);\n      }\n      start = _limitValue(start, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n      let end = Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n      if (spanGaps) {\n        const distanceToDefinedHi = (_parsed\n          .slice(end - 1)\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        end += Math.max(0, distanceToDefinedHi);\n      }\n      count = _limitValue(end, start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    clip: true,\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type PrivateChart from '../core/core.controller.js';\nimport type {Chart, ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart | PrivateChart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart | PrivateChart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  (chart as PrivateChart).height = Math.floor(chart.height);\n  (chart as PrivateChart).width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    (chart as PrivateChart).currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    if (_isDomSupported()) {\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    }\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas?: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  if (!ctx && !canvas) {\n    return;\n  }\n\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import type {Point, SplinePoint} from '../types/geometric.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\nimport {isPatternOrGradient} from './helpers.color.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  if (!prevStyle) {\n    return false;\n  }\n  const cache = [];\n  const replacer = function(key, value) {\n    if (!isPatternOrGradient(value)) {\n      return value;\n    }\n    if (!cache.includes(value)) {\n      cache.push(value);\n    }\n    return cache.indexOf(value);\n  };\n  return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n","import type {Chart, ChartArea, ChartMeta, Scale, TRBL} from '../types/index.js';\n\nfunction getSizeForArea(scale: Scale, chartArea: ChartArea, field: keyof ChartArea) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta: ChartMeta, chartArea: ChartArea): TRBL {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n  return chartArea;\n}\n\nexport function getDatasetClipArea(chart: Chart, meta: ChartMeta): TRBL | false {\n  const clip = meta._clip;\n  if (clip.disabled) {\n    return false;\n  }\n  const area = getDatasetArea(meta, chart.chartArea);\n\n  return {\n    left: clip.left === false ? 0 : area.left - (clip.left === true ? 0 : clip.left),\n    right: clip.right === false ? chart.width : area.right + (clip.right === true ? 0 : clip.right),\n    top: clip.top === false ? 0 : area.top - (clip.top === true ? 0 : clip.top),\n    bottom: clip.bottom === false ? chart.height : area.bottom + (clip.bottom === true ? 0 : clip.bottom)\n  };\n}\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea, isNullOrUndef} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      const result = lookupMethod(data, axis, value);\n      if (spanGaps) {\n        const {vScale} = controller._cachedMeta;\n        const {_parsed} = metaset;\n\n        const distanceToDefinedLo = (_parsed\n          .slice(0, result.lo + 1)\n          .reverse()\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        result.lo -= Math.max(0, distanceToDefinedLo);\n\n        const distanceToDefinedHi = (_parsed\n          .slice(result.hi)\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        result.hi += Math.max(0, distanceToDefinedHi);\n      }\n      return result;\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = canvas && _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  let found = false;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      found = true;\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n\n  if (!found && !options.all) {\n    return 0;\n  }\n\n  return value;\n}\n\nfunction convertObjectDataToArray(data, meta) {\n  const {iScale, vScale} = meta;\n  const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n  const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      [iAxisKey]: key,\n      [vAxisKey]: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      const meta = this._cachedMeta;\n      this._data = convertObjectDataToArray(data, meta);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n      meta._stacked = isStacked(meta.vScale, meta);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        case 'inner':\n          if (i === ilen - 1) {\n            left -= width;\n          } else if (i > 0) {\n            left -= width / 2;\n          }\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).some((key) => isFunction(value[key]));\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea, _isDomSupported, retinaScale, getDatasetClipArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      // Unset pending resize request now to avoid possible recursion within _resize\n      this._resizeBeforeDraw = null;\n      this._resize(width, height);\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    // @ts-expect-error\n    const clip = getDatasetClipArea(this, meta);\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (clip) {\n      clipArea(ctx, clip);\n    }\n\n    meta.controller.draw();\n\n    if (clip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the event inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<TimeUnit | 'datetime', string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: string): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: string): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number | boolean): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options?: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<TimeUnit | 'datetime', string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase as {\n    new (options?: AnyObject): DateAdapter;\n    override<T extends AnyObject = AnyObject>(\n      members: Partial<Omit<DateAdapter<T>, 'options'>>\n    ): void;\n  }\n};\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n    const iScaleValue = currentParsed && currentParsed[iScale.axis];\n\n    const skipNull = (meta) => {\n      const parsed = meta._parsed.find(item => item[iScale.axis] === iScaleValue);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  _getAxisCount() {\n    return this._getAxis().length;\n  }\n\n  getFirstScaleIdForIndexAxis() {\n    const scales = this.chart.scales;\n    const indexScaleId = this.chart.options.indexAxis;\n    return Object.keys(scales).filter(key => scales[key].axis === indexScaleId).shift();\n  }\n\n  _getAxis() {\n    const axis = {};\n    const firstScaleAxisId = this.getFirstScaleIdForIndexAxis();\n    for (const dataset of this.chart.data.datasets) {\n      axis[valueOrDefault(\n        this.chart.options.indexAxis === 'x' ? dataset.xAxisID : dataset.yAxisID, firstScaleAxisId\n      )] = true;\n    }\n    return Object.keys(axis);\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    const axisCount = this._getAxisCount();\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount * axisCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount * axisCount);\n      const axisID = this.chart.options.indexAxis === 'x' ? this.getDataset().xAxisID : this.getDataset().yAxisID;\n      const axisNumber = this._getAxis().indexOf(valueOrDefault(axisID, this.getFirstScaleIdForIndexAxis()));\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined) + axisNumber;\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      // https://github.com/chartjs/Chart.js/issues/11333\n      if (!this.datasetElementType) {\n        this.addElements();\n      }\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    } else if (this.datasetElementType) {\n      // https://github.com/chartjs/Chart.js/issues/11333\n      delete meta.dataset;\n      this.datasetElementType = false;\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _angleDiff, _normalizeAngle, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\nfunction clipSelf(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, x, y, outerRadius, innerRadius, options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const outerAngleClip = Math.min(borderWidth / outerRadius, _normalizeAngle(startAngle - endAngle));\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius - borderWidth / 2, startAngle + outerAngleClip / 2, endAngle - outerAngleClip / 2);\n\n  if (innerRadius > 0) {\n    const innerAngleClip = Math.min(borderWidth / innerRadius, _normalizeAngle(startAngle - endAngle));\n    ctx.arc(x, y, innerRadius + borderWidth / 2, endAngle - innerAngleClip / 2, startAngle + innerAngleClip / 2, true);\n  } else {\n    const clipWidth = Math.min(borderWidth / 2, outerRadius * _normalizeAngle(startAngle - endAngle));\n\n    if (borderJoinStyle === 'round') {\n      ctx.arc(x, y, clipWidth, endAngle - PI / 2, startAngle + PI / 2, true);\n    } else if (borderJoinStyle === 'bevel') {\n      const r = 2 * clipWidth * clipWidth;\n      const endX = -r * Math.cos(endAngle + PI / 2) + x;\n      const endY = -r * Math.sin(endAngle + PI / 2) + y;\n      const startX = r * Math.cos(startAngle + PI / 2) + x;\n      const startY = r * Math.sin(startAngle + PI / 2) + y;\n      ctx.lineTo(endX, endY);\n      ctx.lineTo(startX, startY);\n    }\n  }\n  ctx.closePath();\n\n  ctx.moveTo(0, 0);\n  ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n  ctx.clip('evenodd');\n}\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset, borderRadius} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (options.selfJoin && endAngle - startAngle >= PI && borderRadius === 0 && borderJoinStyle !== 'miter') {\n    clipSelf(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n    selfJoin: false,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n    const betweenAngles = _circumference >= TAU || nonZeroBetween;\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash || []);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0 || (index === 0 && this.min < 0)) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if ((index === 0 && this.min >= 0) && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if it's not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @protected\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort(sorter).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n    * Generates all timestamps defined in the data.\n    * Important: this method can return ticks outside the min and max range, it's the\n    * responsibility of the calling code to clamp values if needed.\n    * @protected\n    */\n  _generate() {\n    const min = this.min;\n    const max = this.max;\n    let timestamps = super.getDataTimestamps();\n    if (!timestamps.includes(min) || !timestamps.length) {\n      timestamps.splice(0, 0, min);\n    }\n    if (!timestamps.includes(max) || timestamps.length === 1) {\n      timestamps.push(max);\n    }\n    return timestamps.sort((a, b) => a - b);\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","import {DoughnutController, PolarAreaController, defaults} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nfunction containsDefaultColorsDefenitions() {\n  return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    const containsColorDefenition = (\n      containsColorsDefinitions(datasets) ||\n      containsColorsDefinition(chartOptions) ||\n      (elements && containsColorsDefinitions(elements)) ||\n      containsDefaultColorsDefenitions());\n\n    if (!options.forceOverride && containsColorDefenition) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of a segment -> need to add another point before this,\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of a segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea, getDatasetClipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {chart, index, line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  const meta = chart.getDatasetMeta(index);\n  const clip = getDatasetClipArea(chart, meta);\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis, clip});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale, clip} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  let fillColor = below;\n  if (below !== above) {\n    if (property === 'x') {\n      clipVertical(ctx, target, area.top);\n      fill(ctx, {line, target, color: above, scale, property, clip});\n      ctx.restore();\n      ctx.save();\n      clipVertical(ctx, target, area.bottom);\n    } else if (property === 'y') {\n      clipHorizontal(ctx, target, area.left);\n      fill(ctx, {line, target, color: below, scale, property, clip});\n      ctx.restore();\n      ctx.save();\n      clipHorizontal(ctx, target, area.right);\n      fillColor = above;\n    }\n  }\n  fill(ctx, {line, target, color: fillColor, scale, property, clip});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction clipHorizontal(ctx, target, clipX) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(clipX, firstPoint.y);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(clipX, lastPoint.y);\n    }\n  }\n\n  ctx.lineTo(clipX, target.first().y);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale, clip} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, clip, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, clip, bounds) {\n  const chartArea = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n\n  if (property === 'x' || property === 'y') {\n    let left, top, right, bottom;\n\n    if (property === 'x') {\n      left = start;\n      top = chartArea.top;\n      right = end;\n      bottom = chartArea.bottom;\n    } else {\n      left = chartArea.left;\n      top = start;\n      right = chartArea.right;\n      bottom = end;\n    }\n\n    ctx.beginPath();\n\n    if (clip) {\n      left = Math.max(left, clip.left);\n      right = Math.min(right, clip.right);\n      top = Math.max(top, clip.top);\n      bottom = Math.min(bottom, clip.bottom);\n    }\n\n    ctx.rect(left, top, right - left, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let xSet = new Set();\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    // No visible items where found, return false so we don't have to divide by 0 which reduces in NaN\n    if (count === 0 || xSet.size === 0) {\n      return false;\n    }\n\n    const xAverage = [...xSet].reduce((a, b) => a + b) / xSet.size;\n\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      // But make sure that active elements are still valid.\n      return lastActive.filter(i =>\n        this.chart.data.datasets[i.datasetIndex] &&\n        this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined\n      );\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\n\n/**\n * @namespace Chart\n */\nimport Chart from './core/core.controller.js';\n\nimport * as helpers from './helpers/index.js';\nimport _adapters from './core/core.adapters.js';\nimport Animation from './core/core.animation.js';\nimport animator from './core/core.animator.js';\nimport Animations from './core/core.animations.js';\nimport * as controllers from './controllers/index.js';\nimport DatasetController from './core/core.datasetController.js';\nimport Element from './core/core.element.js';\nimport * as elements from './elements/index.js';\nimport Interaction from './core/core.interaction.js';\nimport layouts from './core/core.layouts.js';\nimport * as platforms from './platform/index.js';\nimport * as plugins from './plugins/index.js';\nimport registry from './core/core.registry.js';\nimport Scale from './core/core.scale.js';\nimport * as scales from './scales/index.js';\nimport Ticks from './core/core.ticks.js';\n\n// Register built-ins\nChart.register(controllers, scales, elements, plugins);\n\nChart.helpers = {...helpers};\nChart._adapters = _adapters;\nChart.Animation = Animation;\nChart.Animations = Animations;\nChart.animator = animator;\nChart.controllers = registry.controllers.items;\nChart.DatasetController = DatasetController;\nChart.Element = Element;\nChart.elements = elements;\nChart.Interaction = Interaction;\nChart.layouts = layouts;\nChart.platforms = platforms;\nChart.Scale = Scale;\nChart.Ticks = Ticks;\n\n// Compatibility with ESM extensions\nObject.assign(Chart, controllers, scales, elements, plugins, platforms);\nChart.Chart = Chart;\n\nif (typeof window !== 'undefined') {\n  window.Chart = Chart;\n}\n\nexport default Chart;\n\n"],"names":["noop","uid","id","isNullOrUndef","value","isArray","Array","type","Object","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","i","len","keys","length","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone","source","map","target","create","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","v","x","o","y","_splitKey","parts","split","tmp","part","push","resolveObjectKey","obj","resolver","_getKeyResolver","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","_isClickEvent","e","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","round","niceRange","pow","floor","fraction","_factorize","result","sqrt","sort","pop","isNumber","n","Symbol","toPrimitive","isNonPrimitive","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","isFiniteNumber","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","this","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","from","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","vScale","_parsed","spanGaps","dataset","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","distanceToDefinedLo","findIndex","point","distanceToDefinedHi","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","assign","Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","callbacks","numSteps","duration","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","get","complete","progress","listen","event","cb","add","reduce","acc","cur","_duration","stop","cancel","remove","delete","animator","lim","l","h","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","c","d","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","hsl2rgb","hue","hueParse","m","exec","p1","p2","hwb2rgb","hsv2rgb","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","modHSL","ratio","proto","fromObject","input","functionParse","rgbParse","Color","ret","_rgb","_valid","valid","rgbString","hslString","mix","color","weight","c1","c2","w2","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","getNumberFormat","format","formatters","numeric","tickValue","ticks","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","bottom","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_isDomSupported","document","_getParentNode","domNode","parent","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","height","useOffsetPos","shadowRoot","getRelativePosition","canvas","currentDevicePixelRatio","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","rect","getBoundingClientRect","clientX","clientY","getCanvasPosition","xOffset","yOffset","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxWidth","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","matches","match","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","halfWidth","clearCanvas","getContext","resetTransform","clearRect","drawPoint","drawPointLegend","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","sin","cos","lineTo","SQRT1_2","fill","borderWidth","stroke","_isPointInArea","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","_createResolver","scopes","prefixes","rootScopes","fallback","getTarget","finalRootScopes","_resolve","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","prop","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","Error","join","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","resolve","resolveFallback","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","atEdge","elasticIn","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","LINE_HEIGHT","FONT_STYLE","toLineHeight","numberOrZero","_readValueToProps","props","objProps","read","toTRBL","toTRBLCorners","toPadding","toFont","console","warn","inputs","info","cacheable","_addGrace","minmax","change","keepZero","createContext","parentContext","getRtlAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","_computeSegments","segmentOptions","_loop","findStartAndEnd","splitByStyles","solidSegments","_fullLoop","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","getSizeForArea","chartArea","field","getDatasetClipArea","_clip","disabled","getDatasetArea","pixelSize","fontStyle","fontFamily","binarySearch","metaset","controller","_cachedMeta","lookupMethod","_reversePixels","_sharedOptions","getRange","evaluateInteractionItems","position","handler","metasets","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","center","getCenterPoint","getNearestItems","startAngle","endAngle","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","getDatasetMeta","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","stacks","wrap","stack","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","factor","horizontal","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","update","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","configure","minPadding","layoutBoxes","isHorizontal","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","concat","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","total","freeze","updatePos","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","config","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","entry","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","interpolators","boolean","c0","helpersColor","number","Animation","cfg","currentValue","_fn","_easing","_start","_target","_prop","_from","_to","_promises","elapsed","wait","promises","Promise","rej","resolved","Animations","_properties","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","_getSortedDatasetMetas","applyStack","dsIndex","singleMode","otherValue","found","isStacked","stacked","getOrCreateStack","stackKey","indexValue","subStack","getLastIndexInStack","positive","getMatchingVisibleMetas","updateStacks","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","scaleID","_getOtherScale","reset","_destroy","_dataCheck","iAxisKey","vAxisKey","adata","convertObjectDataToArray","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","toClip","defaultClip","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","_length","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","spacing","ceil","skipMajors","evenMajorSpacing","diff","getEvenSpacing","factors","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","edge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","_startPixel","_endPixel","lineValue","getPixelForTick","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","super","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_cache","_dataLimitsCached","init","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","getValueForPixel","getPixelForDecimal","decimal","getDecimalForPixel","getBasePixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","getLineWidthForValue","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","scaleOptions","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","_dataset","buildOrUpdateControllers","newControllers","order","isDatasetVisible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","toggleDataVisibility","getDataVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","lastEvent","determineLastEvent","abstract","DateAdapterBase","members","formats","startOf","endOf","_adapters","_date","computeMinSampleSize","$bar","visibleMetas","getAllScaleValues","curr","updateMinAndPrev","parseValue","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","borderSkipped","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","DoughnutController","animateRotate","animateScale","cutout","circumference","legend","generateLabels","fontColor","legendItem","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","cutoutPercentage","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","categoryPercentage","barPercentage","grouped","_index_","_value_","bars","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","_getStacks","currentParsed","iScaleValue","skipNull","find","_getStackCount","_getAxisCount","_getAxis","getFirstScaleIdForIndexAxis","indexScaleId","firstScaleAxisId","_getStackIndex","pixels","barThickness","stackCount","baseValue","minBarLength","actualBase","floating","barSign","halfGrid","maxBarThickness","Infinity","axisCount","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","axisNumber","stackIndex","rects","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","pointPosition","getPointPositionForValue","parseBorderRadius","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","selfJoin","outerAngleClip","innerAngleClip","clipWidth","clipSelf","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","_interpolate","_getInterpolationMethod","interpolated","hitRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","addRectPath","mouseX","mouseY","inXRange","inYRange","hoverRadius","findOrAddLabel","addedLabels","unshift","addIfString","lastIndexOf","_getLabelForValue","relativeLabelSize","minSpacing","LinearScaleBase","_startValue","_endValue","_valueRange","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","decimalPlaces","generateTicks","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","minExp","exp","startExp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","_padding","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","textSize","updateLimits","setCenterPoint","_pointLabelItems","itemOpts","extra","createPointLabelItem","isNotOverlapped","buildPointLabelItems","hLimits","vLimits","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","labelCount","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","adapters","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","_addedLabels","added","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","plugin_colors","forceOverride","_args","chartOptions","containsColorDefenition","colorizer","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","fillColor","clipVertical","clipHorizontal","doFill","clipY","lineLoop","clipX","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","helpers","platforms"],"mappings":"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","x_google_ignoreList":[5]}